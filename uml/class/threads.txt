@startuml

namespace collector {

struct ThreadArg
{
utils::file_count_t file_count
utils::storage_size_t storage_size
std::string directory
std::string interface_name;
std::string interface_ip;
}

class CollectorThread
{
+<<constructor>> CollectorThread(TrafficStorage& ts, std::mutex& m, std::condition_variable& cv, bool& finished, std::exception_ptr& err);
+{abstract} ~CollectorThread()
+void operator()(ThreadArg threadArg)
#{abstract} void run(ThreadArg threadArg) = 0;
#TrafficStorage& traffic_storage
#std::mutex& storage_mtx
#std::condition_variable& ready
#bool& finished
#std::exception_ptr& error;
}

class TrafficReader
{
+<<constructor>> TrafficReader(TrafficStorage& ts, std::mutex& m, std::condition_variable& cv, bool& finished, std::exception_ptr& err)
+void run(ThreadArg threadArg)
-{static} std::regex tcpdump_regex
}

class TrafficWritter
{
+<<constructor>> TrafficWritter(TrafficStorage& ts, std::mutex& m, std::condition_variable& cv, bool& finished, std::exception_ptr& err)
+void run(ThreadArg threadArg)
}

CollectorThread <|--- TrafficReader
CollectorThread <|--- TrafficWritter

Collector ..> TrafficReader
Collector ..> TrafficWritter

class Collector
{
}

Collector -- TrafficStorage : -trafficStorage
TrafficReader -- TrafficStorage : > has
TrafficWritter -- TrafficStorage : > has

}

@enduml
